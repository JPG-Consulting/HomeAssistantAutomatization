[{"id":"9f33b0ea760f4504","type":"subflow","name":"Home Coordinates","info":"","category":"","in":[{"x":40,"y":60,"wires":[{"id":"23b438c613630e1b"}]}],"out":[{"x":1080,"y":60,"wires":[{"id":"1c2eb6d86f25e48a","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"c488ed1dbb56587e","type":"ha-get-entities","z":"9f33b0ea760f4504","name":"zone.home","server":"4dd2c8ac.28e0e8","version":1,"rules":[{"property":"entity_id","logic":"is","value":"zone.home","valueType":"str"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":370,"y":120,"wires":[["63a40304b0dc22a1"]]},{"id":"23b438c613630e1b","type":"function","z":"9f33b0ea760f4504","name":"Get Coords","func":"var lat = msg.latitude;\nvar lon = msg.longitude;\n\n// If the message does not contain latitude and longitude lets try to get thm elsewhere.\nif ((typeof lat === \"undefined\") || (lat === null) || isNaN(lat) || \n    (typeof lon === \"undefined\") || (lon === null) || isNaN(lon))\n{\n    lat = flow.get(\"$parent.Latitude\");\n    lon = flow.get(\"$parent.Longitude\");\n\n    if ((typeof lat === \"undefined\") || (lat === null) || isNaN(lat) || \n        (typeof lon === \"undefined\") || (lon === null) || isNaN(lon))\n    {\n        // Return through second output.\n        return [ null, msg];\n    }\n}\n\n// 0, 0 is considered as not informed in other nodes\nif (lat === 0 && lon === 0)\n{\n    // Return through second output.\n    return [ null, msg];\n}\n\nmsg.latitude = lat;\nmsg.longitude = lon;\n\nreturn [ msg, null ];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":60,"wires":[["bf2309d06ce1fb4b"],["c488ed1dbb56587e"]]},{"id":"63a40304b0dc22a1","type":"function","z":"9f33b0ea760f4504","name":"Set Coords","func":"var lat = null;\nvar lon = null;\nvar inPayload = msg.payload[0];\n\nif (typeof inPayload === \"object\") {\n    var payloadAttribs = inPayload.attributes;\n    \n    if (typeof payloadAttribs === \"object\") {\n        lat = payloadAttribs.latitude;\n        lon = payloadAttribs.longitude;\n\n        if ((typeof lat === \"undefined\") || (isNaN(lat))) {\n            lat = null;\n        }\n        \n        if ((typeof lon === \"undefined\") || (isNaN(lon))) {\n            lon = null;\n        }\n    }\n}\n\nif ((lat !== null) && (lon !== null)) {\n    flow.set(\"$parent.Latitude\", lat);\n    flow.set(\"$parent.Longitude\", lon);\n}\n\nmsg.latitude = lat;\nmsg.longitude = lon;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":120,"wires":[["bf2309d06ce1fb4b"]]},{"id":"bf2309d06ce1fb4b","type":"function","z":"9f33b0ea760f4504","name":"Set Payload","func":"if ((typeof msg.latitude !== \"undefined\") && msg.latitude !== null && !isNaN(msg.latitude) && \n    (typeof msg.longitude != \"undefined\") && msg.longitude !== null && !isNaN(msg.longitude)) \n{\n    msg.payload = {\n        \"latitude\": msg.latitude,\n        \"longitude\": msg.longitude\n    };\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":60,"wires":[["1c2eb6d86f25e48a"]]},{"id":"1c2eb6d86f25e48a","type":"change","z":"9f33b0ea760f4504","name":"Remove Properties","rules":[{"t":"delete","p":"latitude","pt":"msg"},{"t":"delete","p":"longitude","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":930,"y":60,"wires":[[]]},{"id":"4dd2c8ac.28e0e8","type":"server","name":"Home Assistant","addon":true}]
